name: Build, Lint Dockerfile, Push Docker Image and Apply Terraform

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timeZone: UTC+8
          format: 'YYYYMMDDHHmmss'

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: app/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        env:
          IMAGE_NAME: "${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/flask-minesweeper"
        run: |
          docker build  --build-arg VERSION=${{ steps.time.outputs.time }} -t $IMAGE_NAME:${{ steps.time.outputs.time }} -f app/Dockerfile ./app
          docker push $IMAGE_NAME:${{ steps.time.outputs.time }}

      - name: Build and push Stable Docker image
        if: github.ref == 'refs/heads/main'
        env:
          IMAGE_NAME: "${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/flask-minesweeper"
        run: |
          docker build --build-arg VERSION=stable -t $IMAGE_NAME:stable -f app/Dockerfile ./app
          docker push $IMAGE_NAME:stable
  
  create-update-infra:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: Terraform Init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: terraform init
        working-directory: infra

      - name: Terraform Plan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          TF_LOG: DEBUG
        run: terraform plan -var-file="env.tfvars"
        working-directory: infra

      - name: Terraform Apply
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: terraform apply -auto-approve -var-file="env.tfvars"
        working-directory: infra